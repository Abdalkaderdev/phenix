name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build and test job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.npm
            node_modules
            */*/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      
      - name: Validate HTML
        run: |
          # Check if index.html exists and is valid
          if [ ! -f "index.html" ]; then
            echo "‚ùå index.html not found!"
            exit 1
          fi
          echo "‚úÖ index.html found"
          
          # Check if required files exist
          required_files=("index.js" "style.css" "data.js")
          for file in "${required_files[@]}"; do
            if [ ! -f "$file" ]; then
              echo "‚ùå $file not found!"
              exit 1
            fi
            echo "‚úÖ $file found"
          done
      
      - name: Check file sizes
        run: |
          echo "üìä File sizes:"
          ls -lh index.html index.js style.css data.js
          
          # Check if tiles directory exists and has content
          if [ -d "tiles" ]; then
            echo "‚úÖ Tiles directory found"
            tile_count=$(find tiles -name "*.jpg" | wc -l)
            echo "üì∏ Found $tile_count tile images"
          else
            echo "‚ö†Ô∏è  Tiles directory not found"
          fi

  # Deploy job
  deploy:
    needs: build
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Pages
        uses: actions/configure-pages@v4
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: '.'
          
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
      
      - name: Deployment status
        run: |
          if [ "${{ steps.deployment.outputs.page_url }}" != "" ]; then
            echo "‚úÖ Deployment successful!"
            echo "üåê Your site is live at: ${{ steps.deployment.outputs.page_url }}"
          else
            echo "‚ùå Deployment failed!"
            exit 1
          fi 